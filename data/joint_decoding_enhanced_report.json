{
  "test_configuration": {
    "num_test_texts": 5,
    "languages": [
      "en",
      "es",
      "fr"
    ],
    "timestamp": 1755885508.768493
  },
  "decoding_results": [
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as HasProperty AND NEAR(The red car is parked near the building) AND graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood as SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) AND graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood as SIMILAR AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) AND graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as BECAUSE AND HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood as SimilarTo AND HasProperty(This is similar to that) AND graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) AND graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as HasProperty AND NEAR(The red car is parked near the building) AND graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood as SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) AND graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood as SIMILAR AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) AND graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as BECAUSE AND HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood as SimilarTo AND HasProperty(This is similar to that) AND graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) AND graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as HasProperty AND NEAR(The red car is parked near the building)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood as SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as HasProperty(The red car is parked near the building)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood as SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood as SimilarTo AND HasProperty(This is similar to that)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as HasProperty AND NEAR(The red car is parked near the building)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood as SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as HasProperty(The red car is parked near the building)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood as SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as AtLocation AND HasProperty(The cat is on the mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood as SimilarTo AND HasProperty(This is similar to that) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as unknown(The book contains important information) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as HasProperty(The weather is cold today) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building'...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood...",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood as graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood as graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood as graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as graph(entity The; entity book; entity contains)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "The text 'This is similar to that' can be understood as graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as graph(entity The; entity book; entity contains) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "The text 'This is similar to that' can be understood as graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as graph(entity The; entity book; entity contains) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "The text 'The red car is parked near the building' can be understood as graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "The text 'The cat is on the mat' can be understood as graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "The text 'This is similar to that' can be understood as graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "The text 'The book contains important information' can be understood as graph(entity The; entity book; entity contains) with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "The text 'The weather is cold today' can be understood as graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
      "graph_success": true,
      "conditioning": {
        "style": "descriptive",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, HasProperty AND NEAR(The red car is parked near the...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, HasProperty(The red car is parked near the building) AND...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, SIMILAR AND SimilarTo AND HasProperty(This is similar to that)...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, BECAUSE AND HasProperty(The red car is parked near the...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, SimilarTo AND HasProperty(This is similar to that) AND graph(concept...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, HasProperty AND NEAR(The red car is parked near the building) AND graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, SIMILAR AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, BECAUSE AND HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, SimilarTo AND HasProperty(This is similar to that) AND graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, HasProperty AND NEAR(The red car is parked near the building) AND graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, SIMILAR AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, BECAUSE AND HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, SimilarTo AND HasProperty(This is similar to that) AND graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, HasProperty AND NEAR(The red car is parked near the...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, HasProperty(The red car is parked near the building) represents...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, SIMILAR AND SimilarTo AND HasProperty(This is similar to that)...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, BECAUSE AND HasProperty(The red car is parked near the...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, SimilarTo AND HasProperty(This is similar to that) represents the...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, HasProperty AND NEAR(The red car is parked near the building) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, HasProperty(The red car is parked near the building) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, SIMILAR AND SimilarTo AND HasProperty(This is similar to that) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, BECAUSE AND HasProperty(The red car is parked near the building) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, SimilarTo AND HasProperty(This is similar to that) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, HasProperty AND NEAR(The red car is parked near the building) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure of 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure of 'The weather is cold today' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, HasProperty(The red car is parked near the building) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, SIMILAR AND SimilarTo AND HasProperty(This is similar to that) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure of 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure of 'The weather is cold today' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, BECAUSE AND HasProperty(The red car is parked near the building) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, AtLocation AND HasProperty(The cat is on the mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, SimilarTo AND HasProperty(This is similar to that) represents the semantic structure of 'This is similar to that' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, unknown(The book contains important information) represents the semantic structure of 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, HasProperty(The weather is cold today) represents the semantic structure of 'The weather is cold today' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; NEAR contains near;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; red precedes The;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; red precedes The;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The;...",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Formally, graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) represents the semantic structure of 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Formally, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) represents the semantic structure of 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Formally, graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) represents the semantic structure of 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Formally, graph(entity The; entity book; entity contains) represents the semantic structure of 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Formally, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) represents the semantic structure of 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "formal",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, HasProperty AND NEAR(The red car is parked near...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, HasProperty(The red car is parked near the building)...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, SIMILAR AND SimilarTo AND HasProperty(This is similar to...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, BECAUSE AND HasProperty(The red car is parked near...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, SimilarTo AND HasProperty(This is similar to that) AND...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, HasProperty AND NEAR(The red car is parked near the building) AND graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, SIMILAR AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, BECAUSE AND HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, SimilarTo AND HasProperty(This is similar to that) AND graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, HasProperty AND NEAR(The red car is parked near the building) AND graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, SIMILAR AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, BECAUSE AND HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, SimilarTo AND HasProperty(This is similar to that) AND graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) AND graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, HasProperty AND NEAR(The red car is parked near...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, HasProperty(The red car is parked near the building)...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, SIMILAR AND SimilarTo AND HasProperty(This is similar to...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, BECAUSE AND HasProperty(The red car is parked near...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, SimilarTo AND HasProperty(This is similar to that) is...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, HasProperty AND NEAR(The red car is parked near the building) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, HasProperty(The red car is parked near the building) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, SIMILAR AND SimilarTo AND HasProperty(This is similar to that) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, BECAUSE AND HasProperty(The red car is parked near the building) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, SimilarTo AND HasProperty(This is similar to that) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, HasProperty AND NEAR(The red car is parked near the building) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) is what 'The cat is on the mat' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The book contains important information' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The weather is cold today' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, HasProperty(The red car is parked near the building) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) is what 'The cat is on the mat' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, SIMILAR AND SimilarTo AND HasProperty(This is similar to that) is what 'This is similar to that' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The book contains important information' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The weather is cold today' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, BECAUSE AND HasProperty(The red car is parked near the building) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, AtLocation AND HasProperty(The cat is on the mat) is what 'The cat is on the mat' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, SimilarTo AND HasProperty(This is similar to that) is what 'This is similar to that' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, unknown(The book contains important information) is what 'The book contains important information' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, HasProperty(The weather is cold today) is what 'The weather is cold today' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; NEAR contains...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; red precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; red precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what 'The book contains important information' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what 'The book contains important information' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) is what 'This is similar to that' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what 'The book contains important information' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "So basically, graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) is what 'The red car is parked near the building' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "So basically, graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) is what 'The cat is on the mat' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "So basically, graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) is what 'This is similar to that' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "So basically, graph(entity The; entity book; entity contains) is what 'The book contains important information' means with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "So basically, graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) is what 'The weather is cold today' means",
      "graph_success": true,
      "conditioning": {
        "style": "casual",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: HasProperty AND NEAR(The red car is parked near...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: SIMILAR AND THIS AND SimilarTo AND HasProperty(This is...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: HasProperty(The red car is parked near the building)...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: SIMILAR AND SimilarTo AND HasProperty(This is similar to...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: BECAUSE AND HasProperty(The red car is parked near...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: SimilarTo AND HasProperty(This is similar to that) AND...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The;...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: HasProperty AND NEAR(The red car is parked near the building) AND graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: SIMILAR AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: BECAUSE AND HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: SimilarTo AND HasProperty(This is similar to that) AND graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: HasProperty AND NEAR(The red car is parked near the building) AND graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: SIMILAR AND SimilarTo AND HasProperty(This is similar to that) AND graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: BECAUSE AND HasProperty(The red car is parked near the building) AND graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) AND graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: SimilarTo AND HasProperty(This is similar to that) AND graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) AND graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) AND graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "balanced",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: HasProperty AND NEAR(The red car is parked near...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: SIMILAR AND THIS AND SimilarTo AND HasProperty(This is...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: HasProperty(The red car is parked near the building)...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: SIMILAR AND SimilarTo AND HasProperty(This is similar to...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: BECAUSE AND HasProperty(The red car is parked near...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat)...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: SimilarTo AND HasProperty(This is similar to that) |...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: HasProperty AND NEAR(The red car is parked near the building) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: HasProperty(The red car is parked near the building) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: SIMILAR AND SimilarTo AND HasProperty(This is similar to that) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: BECAUSE AND HasProperty(The red car is parked near the building) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: SimilarTo AND HasProperty(This is similar to that) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: HasProperty AND NEAR(The red car is parked near the building) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) | Input: 'The cat is on the mat' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The weather is cold today' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: HasProperty(The red car is parked near the building) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) | Input: 'The cat is on the mat' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: SIMILAR AND SimilarTo AND HasProperty(This is similar to that) | Input: 'This is similar to that' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The weather is cold today' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: BECAUSE AND HasProperty(The red car is parked near the building) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: AtLocation AND HasProperty(The cat is on the mat) | Input: 'The cat is on the mat' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: SimilarTo AND HasProperty(This is similar to that) | Input: 'This is similar to that' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: unknown(The book contains important information) | Input: 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: HasProperty(The weather is cold today) | Input: 'The weather is cold today' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "nsm",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; NEAR contains...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input:...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; red precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input:...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; red precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input:...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes...",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "short"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input: 'The book contains important information'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "medium"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "en",
      "primitives": [
        "HasProperty",
        "NEAR"
      ],
      "nsm_explication": "HasProperty AND NEAR(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "NEAR",
              "text": "The red car is parked near the building"
            },
            "importance": 0.1
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.5
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "primitive_1",
            "target": "entity_5",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near)",
        "node_count": 9,
        "edge_count": 9
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; NEAR contains near; red precedes The; red follows car; car precedes red; parked follows near) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "en",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "en",
      "primitives": [
        "SIMILAR",
        "THIS",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND THIS AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "THIS",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.125
          },
          {
            "id": "primitive_3",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.125
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.25
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_0",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_2",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar)",
        "node_count": 7,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity similar; concept SIMILAR; concept THIS; SIMILAR contains similar; THIS contains This; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "en",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input: 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "en",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1111111111111111
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2222222222222222
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4444444444444444
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3333333333333333
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1111111111111111
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 8,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "es",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "es",
      "primitives": [
        "SIMILAR",
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SIMILAR AND SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SIMILAR",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_2",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "primitive_1",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar)",
        "node_count": 6,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity similar; concept SIMILAR; concept SimilarTo; SIMILAR contains similar; SimilarTo contains similar) | Input: 'This is similar to that'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "es",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input: 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "es",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The red car is parked near the building",
      "language": "fr",
      "primitives": [
        "BECAUSE",
        "HasProperty"
      ],
      "nsm_explication": "BECAUSE AND HasProperty(The red car is parked near the building)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "BECAUSE",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The red car is parked near the building"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.1
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "red",
              "position": 1
            },
            "importance": 0.3
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "car",
              "position": 2
            },
            "importance": 0.2
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "parked",
              "position": 4
            },
            "importance": 0.2
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "near",
              "position": 5
            },
            "importance": 0.4
          },
          {
            "id": "entity_6",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 6
            },
            "importance": 0.3
          },
          {
            "id": "entity_7",
            "type": "entity",
            "attributes": {
              "word": "building",
              "position": 7
            },
            "importance": 0.1
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_1",
            "target": "entity_2",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_2",
            "target": "entity_1",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_4",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_5",
            "target": "entity_6",
            "relation": "follows",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_5",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_6",
            "target": "entity_7",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked)",
        "node_count": 9,
        "edge_count": 8
      },
      "joint_output": "Technical analysis: graph(entity near; entity red; entity the; red precedes The; red follows car; car precedes red; parked follows near; near precedes parked) | Input: 'The red car is parked near the building'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The cat is on the mat",
      "language": "fr",
      "primitives": [
        "AtLocation",
        "HasProperty"
      ],
      "nsm_explication": "AtLocation AND HasProperty(The cat is on the mat)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "AtLocation",
              "text": "The cat is on the mat"
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The cat is on the mat"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "cat",
              "position": 1
            },
            "importance": 0.2857142857142857
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "the",
              "position": 4
            },
            "importance": 0.14285714285714285
          },
          {
            "id": "entity_5",
            "type": "entity",
            "attributes": {
              "word": "mat",
              "position": 5
            },
            "importance": 0.14285714285714285
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_1",
            "relation": "contains",
            "weight": 0.8
          },
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_4",
            "target": "entity_5",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat)",
        "node_count": 6,
        "edge_count": 3
      },
      "joint_output": "Technical analysis: graph(entity cat; concept AtLocation; entity The; AtLocation contains cat; cat precedes The; the follows mat) | Input: 'The cat is on the mat'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "This is similar to that",
      "language": "fr",
      "primitives": [
        "SimilarTo",
        "HasProperty"
      ],
      "nsm_explication": "SimilarTo AND HasProperty(This is similar to that)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "SimilarTo",
              "text": "This is similar to that"
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "primitive_1",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "This is similar to that"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "This",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "similar",
              "position": 2
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "that",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [
          {
            "source": "primitive_0",
            "target": "entity_2",
            "relation": "contains",
            "weight": 0.8
          }
        ],
        "structure": "connected",
        "text_representation": "graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar)",
        "node_count": 5,
        "edge_count": 1
      },
      "joint_output": "Technical analysis: graph(concept SimilarTo; entity similar; concept HasProperty; SimilarTo contains similar) | Input: 'This is similar to that' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The book contains important information",
      "language": "fr",
      "primitives": [],
      "nsm_explication": "unknown(The book contains important information)",
      "graph_representation": {
        "nodes": [
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.0
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "book",
              "position": 1
            },
            "importance": 0.0
          },
          {
            "id": "entity_2",
            "type": "entity",
            "attributes": {
              "word": "contains",
              "position": 2
            },
            "importance": 0.0
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "important",
              "position": 3
            },
            "importance": 0.0
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "information",
              "position": 4
            },
            "importance": 0.0
          }
        ],
        "edges": [],
        "structure": "disconnected",
        "text_representation": "graph(entity The; entity book; entity contains)",
        "node_count": 5,
        "edge_count": 0
      },
      "joint_output": "Technical analysis: graph(entity The; entity book; entity contains) | Input: 'The book contains important information' with additional semantic context and structural information",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    },
    {
      "text": "The weather is cold today",
      "language": "fr",
      "primitives": [
        "HasProperty"
      ],
      "nsm_explication": "HasProperty(The weather is cold today)",
      "graph_representation": {
        "nodes": [
          {
            "id": "primitive_0",
            "type": "concept",
            "attributes": {
              "primitive": "HasProperty",
              "text": "The weather is cold today"
            },
            "importance": 0.0
          },
          {
            "id": "entity_0",
            "type": "entity",
            "attributes": {
              "word": "The",
              "position": 0
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_1",
            "type": "entity",
            "attributes": {
              "word": "weather",
              "position": 1
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_3",
            "type": "entity",
            "attributes": {
              "word": "cold",
              "position": 3
            },
            "importance": 0.16666666666666666
          },
          {
            "id": "entity_4",
            "type": "entity",
            "attributes": {
              "word": "today",
              "position": 4
            },
            "importance": 0.16666666666666666
          }
        ],
        "edges": [
          {
            "source": "entity_1",
            "target": "entity_0",
            "relation": "precedes",
            "weight": 0.6
          },
          {
            "source": "entity_3",
            "target": "entity_4",
            "relation": "follows",
            "weight": 0.6
          }
        ],
        "structure": "connected",
        "text_representation": "graph(entity The; entity weather; entity cold; weather precedes The; cold follows today)",
        "node_count": 5,
        "edge_count": 2
      },
      "joint_output": "Technical analysis: graph(entity The; entity weather; entity cold; weather precedes The; cold follows today) | Input: 'The weather is cold today'",
      "graph_success": true,
      "conditioning": {
        "style": "technical",
        "focus": "graph",
        "length": "long"
      }
    }
  ],
  "evaluation_results": [
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5517914891242981,
      "overall_score": 0.8355374467372895,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6397129893302917,
      "overall_score": 0.8619138967990876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.75,
      "semantic_score": 0.6558690071105957,
      "overall_score": 0.8217607021331788,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5966083407402039,
      "overall_score": 0.8789825022220611,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5602236986160278,
      "overall_score": 0.8680671095848083,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6055747866630554,
      "overall_score": 0.8516724359989166,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6397129893302917,
      "overall_score": 0.8619138967990876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6494749188423157,
      "overall_score": 0.8648424756526947,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5966083407402039,
      "overall_score": 0.8789825022220611,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5602236986160278,
      "overall_score": 0.8680671095848083,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.576358437538147,
      "overall_score": 0.8429075312614441,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6397129893302917,
      "overall_score": 0.8619138967990876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6554985642433167,
      "overall_score": 0.896649569272995,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5966083407402039,
      "overall_score": 0.8789825022220611,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5602236986160278,
      "overall_score": 0.8680671095848083,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5517914891242981,
      "overall_score": 0.8355374467372895,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6397129893302917,
      "overall_score": 0.8619138967990876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.75,
      "semantic_score": 0.6558690071105957,
      "overall_score": 0.8217607021331788,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5966083407402039,
      "overall_score": 0.8789825022220611,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5602236986160278,
      "overall_score": 0.8680671095848083,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6055747866630554,
      "overall_score": 0.8516724359989166,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6397129893302917,
      "overall_score": 0.8619138967990876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6494749188423157,
      "overall_score": 0.8648424756526947,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5966083407402039,
      "overall_score": 0.8789825022220611,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5602236986160278,
      "overall_score": 0.8680671095848083,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.576358437538147,
      "overall_score": 0.8429075312614441,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6397129893302917,
      "overall_score": 0.8619138967990876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6554985642433167,
      "overall_score": 0.896649569272995,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5966083407402039,
      "overall_score": 0.8789825022220611,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5602236986160278,
      "overall_score": 0.8680671095848083,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6918323636054993,
      "overall_score": 0.9075497090816498,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6878119707107544,
      "overall_score": 0.9063435912132263,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7542534470558167,
      "overall_score": 0.926276034116745,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7193659543991089,
      "overall_score": 0.9158097863197326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6585031151771545,
      "overall_score": 0.8975509345531463,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7553346157073975,
      "overall_score": 0.9266003847122192,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6878119707107544,
      "overall_score": 0.9063435912132263,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7536839842796326,
      "overall_score": 0.9261051952838897,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7193659543991089,
      "overall_score": 0.9158097863197326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6585031151771545,
      "overall_score": 0.8975509345531463,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7052749991416931,
      "overall_score": 0.9115824997425079,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6878119707107544,
      "overall_score": 0.9063435912132263,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7701007127761841,
      "overall_score": 0.9310302138328552,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7193659543991089,
      "overall_score": 0.9158097863197326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6585031151771545,
      "overall_score": 0.8975509345531463,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6918323636054993,
      "overall_score": 0.9075497090816498,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6878119707107544,
      "overall_score": 0.9063435912132263,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7542534470558167,
      "overall_score": 0.926276034116745,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6882890462875366,
      "overall_score": 0.9064867138862609,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5973957777023315,
      "overall_score": 0.8792187333106994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7553346157073975,
      "overall_score": 0.9266003847122192,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6878119707107544,
      "overall_score": 0.9063435912132263,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7536839842796326,
      "overall_score": 0.9261051952838897,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6882890462875366,
      "overall_score": 0.9064867138862609,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5973957777023315,
      "overall_score": 0.8792187333106994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7052749991416931,
      "overall_score": 0.9115824997425079,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6878119707107544,
      "overall_score": 0.9063435912132263,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6990971565246582,
      "overall_score": 0.9097291469573974,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6882890462875366,
      "overall_score": 0.9064867138862609,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5973957777023315,
      "overall_score": 0.8792187333106994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7917196154594421,
      "overall_score": 0.9375158846378326,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5638038516044617,
      "overall_score": 0.8691411554813384,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7418552041053772,
      "overall_score": 0.9225565612316131,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.8456045389175415,
      "overall_score": 0.9536813616752624,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7083460092544556,
      "overall_score": 0.9125038027763366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5052262544631958,
      "overall_score": 0.8215678763389588,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6176576614379883,
      "overall_score": 0.8852972984313965,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.624257504940033,
      "overall_score": 0.8872772514820099,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.559963583946228,
      "overall_score": 0.8679890751838684,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5381942987442017,
      "overall_score": 0.8614582896232604,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.509617030620575,
      "overall_score": 0.8228851091861725,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6176576614379883,
      "overall_score": 0.8852972984313965,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.61578369140625,
      "overall_score": 0.884735107421875,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.559963583946228,
      "overall_score": 0.8679890751838684,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5381942987442017,
      "overall_score": 0.8614582896232604,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.509617030620575,
      "overall_score": 0.8228851091861725,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6176576614379883,
      "overall_score": 0.8852972984313965,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6134272217750549,
      "overall_score": 0.8840281665325165,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.559963583946228,
      "overall_score": 0.8679890751838684,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5381942987442017,
      "overall_score": 0.8614582896232604,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5052262544631958,
      "overall_score": 0.8215678763389588,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6176576614379883,
      "overall_score": 0.8852972984313965,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.624257504940033,
      "overall_score": 0.8872772514820099,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.558042049407959,
      "overall_score": 0.8674126148223876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5381942987442017,
      "overall_score": 0.8614582896232604,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.509617030620575,
      "overall_score": 0.8228851091861725,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6176576614379883,
      "overall_score": 0.8852972984313965,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.61578369140625,
      "overall_score": 0.884735107421875,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.558042049407959,
      "overall_score": 0.8674126148223876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5381942987442017,
      "overall_score": 0.8614582896232604,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.509617030620575,
      "overall_score": 0.8228851091861725,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6176576614379883,
      "overall_score": 0.8852972984313965,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6134272217750549,
      "overall_score": 0.8840281665325165,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.558042049407959,
      "overall_score": 0.8674126148223876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5381942987442017,
      "overall_score": 0.8614582896232604,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7813592553138733,
      "overall_score": 0.934407776594162,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6053869724273682,
      "overall_score": 0.8816160917282104,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6273078322410583,
      "overall_score": 0.8881923496723174,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5953410863876343,
      "overall_score": 0.8786023259162903,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.36065301299095154,
      "overall_score": 0.8081959038972855,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7573647499084473,
      "overall_score": 0.9272094249725341,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6053869724273682,
      "overall_score": 0.8816160917282104,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6321442127227783,
      "overall_score": 0.8896432638168335,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5953410863876343,
      "overall_score": 0.8786023259162903,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.36065301299095154,
      "overall_score": 0.8081959038972855,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7261402606964111,
      "overall_score": 0.9178420782089233,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6053869724273682,
      "overall_score": 0.8816160917282104,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4850964844226837,
      "overall_score": 0.8455289453268051,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5953410863876343,
      "overall_score": 0.8786023259162903,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.36065301299095154,
      "overall_score": 0.8081959038972855,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.4776352643966675,
      "overall_score": 0.8132905793190003,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5563116669654846,
      "overall_score": 0.8368935000896454,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.75,
      "semantic_score": 0.5994988679885864,
      "overall_score": 0.8048496603965759,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5609475374221802,
      "overall_score": 0.868284261226654,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.46935930848121643,
      "overall_score": 0.8408077925443649,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5038433074951172,
      "overall_score": 0.8211529922485352,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5563116669654846,
      "overall_score": 0.8368935000896454,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5926991701126099,
      "overall_score": 0.847809751033783,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5609475374221802,
      "overall_score": 0.868284261226654,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.46935930848121643,
      "overall_score": 0.8408077925443649,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5074063539505005,
      "overall_score": 0.8222219061851501,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5563116669654846,
      "overall_score": 0.8368935000896454,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5961031317710876,
      "overall_score": 0.8788309395313263,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5609475374221802,
      "overall_score": 0.868284261226654,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.46935930848121643,
      "overall_score": 0.8408077925443649,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.4776352643966675,
      "overall_score": 0.8132905793190003,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5563116669654846,
      "overall_score": 0.8368935000896454,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.75,
      "semantic_score": 0.5994988679885864,
      "overall_score": 0.8048496603965759,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5609475374221802,
      "overall_score": 0.868284261226654,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.46935930848121643,
      "overall_score": 0.8408077925443649,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5038433074951172,
      "overall_score": 0.8211529922485352,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5563116669654846,
      "overall_score": 0.8368935000896454,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5926991701126099,
      "overall_score": 0.847809751033783,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5609475374221802,
      "overall_score": 0.868284261226654,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.46935930848121643,
      "overall_score": 0.8408077925443649,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5074063539505005,
      "overall_score": 0.8222219061851501,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5563116669654846,
      "overall_score": 0.8368935000896454,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5961031317710876,
      "overall_score": 0.8788309395313263,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5609475374221802,
      "overall_score": 0.868284261226654,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.46935930848121643,
      "overall_score": 0.8408077925443649,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7813592553138733,
      "overall_score": 0.934407776594162,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6013959050178528,
      "overall_score": 0.8804187715053557,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6273078322410583,
      "overall_score": 0.8881923496723174,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6191532611846924,
      "overall_score": 0.8857459783554077,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4597066640853882,
      "overall_score": 0.8379119992256164,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7220077514648438,
      "overall_score": 0.9166023254394531,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6013959050178528,
      "overall_score": 0.8804187715053557,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6321442127227783,
      "overall_score": 0.8896432638168335,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6191532611846924,
      "overall_score": 0.8857459783554077,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4597066640853882,
      "overall_score": 0.8379119992256164,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7261402606964111,
      "overall_score": 0.9178420782089233,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6013959050178528,
      "overall_score": 0.8804187715053557,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6524887084960938,
      "overall_score": 0.895746612548828,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6191532611846924,
      "overall_score": 0.8857459783554077,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4597066640853882,
      "overall_score": 0.8379119992256164,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6510298848152161,
      "overall_score": 0.8953089654445647,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6265770196914673,
      "overall_score": 0.8879731059074402,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6994301080703735,
      "overall_score": 0.909829032421112,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6933073401451111,
      "overall_score": 0.9079922020435333,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5754801630973816,
      "overall_score": 0.8726440489292144,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6547842621803284,
      "overall_score": 0.8964352786540984,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6265770196914673,
      "overall_score": 0.8879731059074402,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6971970796585083,
      "overall_score": 0.9091591238975525,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6933073401451111,
      "overall_score": 0.9079922020435333,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5754801630973816,
      "overall_score": 0.8726440489292144,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6607432961463928,
      "overall_score": 0.8982229888439178,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6265770196914673,
      "overall_score": 0.8879731059074402,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7120694518089294,
      "overall_score": 0.9136208355426788,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6933073401451111,
      "overall_score": 0.9079922020435333,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5754801630973816,
      "overall_score": 0.8726440489292144,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6510298848152161,
      "overall_score": 0.8953089654445647,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6265770196914673,
      "overall_score": 0.8879731059074402,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6994301080703735,
      "overall_score": 0.909829032421112,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.641514778137207,
      "overall_score": 0.892454433441162,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5337088704109192,
      "overall_score": 0.8601126611232757,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6547842621803284,
      "overall_score": 0.8964352786540984,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6265770196914673,
      "overall_score": 0.8879731059074402,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6971970796585083,
      "overall_score": 0.9091591238975525,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.641514778137207,
      "overall_score": 0.892454433441162,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5337088704109192,
      "overall_score": 0.8601126611232757,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6607432961463928,
      "overall_score": 0.8982229888439178,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6265770196914673,
      "overall_score": 0.8879731059074402,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6365344524383545,
      "overall_score": 0.8909603357315063,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.641514778137207,
      "overall_score": 0.892454433441162,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5337088704109192,
      "overall_score": 0.8601126611232757,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.046339619904756546,
      "overall_score": 0.7139018859714269,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.31456276774406433,
      "overall_score": 0.7943688303232193,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.46774816513061523,
      "overall_score": 0.8403244495391845,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.18566642701625824,
      "overall_score": 0.7556999281048774,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.21858561038970947,
      "overall_score": 0.7655756831169128,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.0934048518538475,
      "overall_score": 0.7280214555561542,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.31456276774406433,
      "overall_score": 0.7943688303232193,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.45914605259895325,
      "overall_score": 0.8377438157796859,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.18566642701625824,
      "overall_score": 0.7556999281048774,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.21858561038970947,
      "overall_score": 0.7655756831169128,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.0934048518538475,
      "overall_score": 0.7280214555561542,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.31456276774406433,
      "overall_score": 0.7943688303232193,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4509422183036804,
      "overall_score": 0.8352826654911041,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.18566642701625824,
      "overall_score": 0.7556999281048774,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.21858561038970947,
      "overall_score": 0.7655756831169128,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.3786011040210724,
      "overall_score": 0.7835803312063218,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5225570797920227,
      "overall_score": 0.8567671239376068,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5707798600196838,
      "overall_score": 0.8712339580059051,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43342214822769165,
      "overall_score": 0.8300266444683074,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44428694248199463,
      "overall_score": 0.8332860827445984,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.38843005895614624,
      "overall_score": 0.7865290176868439,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5225570797920227,
      "overall_score": 0.8567671239376068,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5652375817298889,
      "overall_score": 0.8695712745189667,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43342214822769165,
      "overall_score": 0.8300266444683074,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44428694248199463,
      "overall_score": 0.8332860827445984,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.38843005895614624,
      "overall_score": 0.7865290176868439,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5225570797920227,
      "overall_score": 0.8567671239376068,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5527296662330627,
      "overall_score": 0.8658188998699188,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43342214822769165,
      "overall_score": 0.8300266444683074,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44428694248199463,
      "overall_score": 0.8332860827445984,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.3786011040210724,
      "overall_score": 0.7835803312063218,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5225570797920227,
      "overall_score": 0.8567671239376068,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5707798600196838,
      "overall_score": 0.8712339580059051,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.3855394423007965,
      "overall_score": 0.815661832690239,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44428694248199463,
      "overall_score": 0.8332860827445984,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.38843005895614624,
      "overall_score": 0.7865290176868439,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5225570797920227,
      "overall_score": 0.8567671239376068,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5652375817298889,
      "overall_score": 0.8695712745189667,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.3855394423007965,
      "overall_score": 0.815661832690239,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44428694248199463,
      "overall_score": 0.8332860827445984,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.38843005895614624,
      "overall_score": 0.7865290176868439,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5225570797920227,
      "overall_score": 0.8567671239376068,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5527296662330627,
      "overall_score": 0.8658188998699188,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.3855394423007965,
      "overall_score": 0.815661832690239,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44428694248199463,
      "overall_score": 0.8332860827445984,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7137020230293274,
      "overall_score": 0.9141106069087982,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6132649183273315,
      "overall_score": 0.8839794754981994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6633540391921997,
      "overall_score": 0.8990062117576598,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6229353547096252,
      "overall_score": 0.8868806064128876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4636656641960144,
      "overall_score": 0.8390996992588042,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7575060129165649,
      "overall_score": 0.9272518038749694,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6132649183273315,
      "overall_score": 0.8839794754981994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6633566617965698,
      "overall_score": 0.8990069985389709,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6229353547096252,
      "overall_score": 0.8868806064128876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4636656641960144,
      "overall_score": 0.8390996992588042,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.682146430015564,
      "overall_score": 0.9046439290046692,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6132649183273315,
      "overall_score": 0.8839794754981994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7161474227905273,
      "overall_score": 0.9148442268371582,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6229353547096252,
      "overall_score": 0.8868806064128876,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4636656641960144,
      "overall_score": 0.8390996992588042,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5217421650886536,
      "overall_score": 0.826522649526596,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.556613028049469,
      "overall_score": 0.8369839084148407,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.75,
      "semantic_score": 0.6381396055221558,
      "overall_score": 0.8164418816566468,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846050977706909,
      "overall_score": 0.8753815293312073,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5065036416053772,
      "overall_score": 0.8519510924816132,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5499849915504456,
      "overall_score": 0.8349954974651337,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.556613028049469,
      "overall_score": 0.8369839084148407,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6329972743988037,
      "overall_score": 0.8598991823196411,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846050977706909,
      "overall_score": 0.8753815293312073,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5065036416053772,
      "overall_score": 0.8519510924816132,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5540429353713989,
      "overall_score": 0.8362128806114197,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.556613028049469,
      "overall_score": 0.8369839084148407,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6349288821220398,
      "overall_score": 0.8904786646366118,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846050977706909,
      "overall_score": 0.8753815293312073,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5065036416053772,
      "overall_score": 0.8519510924816132,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5217421650886536,
      "overall_score": 0.826522649526596,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.556613028049469,
      "overall_score": 0.8369839084148407,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.75,
      "semantic_score": 0.6381396055221558,
      "overall_score": 0.8164418816566468,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846050977706909,
      "overall_score": 0.8753815293312073,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5065036416053772,
      "overall_score": 0.8519510924816132,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5499849915504456,
      "overall_score": 0.8349954974651337,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.556613028049469,
      "overall_score": 0.8369839084148407,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.6329972743988037,
      "overall_score": 0.8598991823196411,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846050977706909,
      "overall_score": 0.8753815293312073,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5065036416053772,
      "overall_score": 0.8519510924816132,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.5540429353713989,
      "overall_score": 0.8362128806114197,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.556613028049469,
      "overall_score": 0.8369839084148407,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6349288821220398,
      "overall_score": 0.8904786646366118,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846050977706909,
      "overall_score": 0.8753815293312073,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5065036416053772,
      "overall_score": 0.8519510924816132,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7137020230293274,
      "overall_score": 0.9141106069087982,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6132649183273315,
      "overall_score": 0.8839794754981994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6633540391921997,
      "overall_score": 0.8990062117576598,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7100867629051208,
      "overall_score": 0.9130260288715362,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6085774302482605,
      "overall_score": 0.8825732290744781,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7575060129165649,
      "overall_score": 0.9272518038749694,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6132649183273315,
      "overall_score": 0.8839794754981994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6633566617965698,
      "overall_score": 0.8990069985389709,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7100867629051208,
      "overall_score": 0.9130260288715362,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6085774302482605,
      "overall_score": 0.8825732290744781,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.682146430015564,
      "overall_score": 0.9046439290046692,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6132649183273315,
      "overall_score": 0.8839794754981994,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6900463700294495,
      "overall_score": 0.9070139110088348,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7100867629051208,
      "overall_score": 0.9130260288715362,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6085774302482605,
      "overall_score": 0.8825732290744781,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6339570879936218,
      "overall_score": 0.8901871263980865,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6183621883392334,
      "overall_score": 0.88550865650177,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7730262279510498,
      "overall_score": 0.9319078683853149,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.710824191570282,
      "overall_score": 0.9132472574710846,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6208112835884094,
      "overall_score": 0.8862433850765228,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6650981307029724,
      "overall_score": 0.8995294392108917,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6183621883392334,
      "overall_score": 0.88550865650177,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7694863677024841,
      "overall_score": 0.9308459103107452,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.710824191570282,
      "overall_score": 0.9132472574710846,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6208112835884094,
      "overall_score": 0.8862433850765228,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6548029780387878,
      "overall_score": 0.8964408934116364,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6183621883392334,
      "overall_score": 0.88550865650177,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7895682454109192,
      "overall_score": 0.9368704736232757,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.710824191570282,
      "overall_score": 0.9132472574710846,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6208112835884094,
      "overall_score": 0.8862433850765228,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6339570879936218,
      "overall_score": 0.8901871263980865,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846882462501526,
      "overall_score": 0.8754064738750458,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7730262279510498,
      "overall_score": 0.9319078683853149,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6851271986961365,
      "overall_score": 0.9055381596088409,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5313078165054321,
      "overall_score": 0.8593923449516296,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6650981307029724,
      "overall_score": 0.8995294392108917,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846882462501526,
      "overall_score": 0.8754064738750458,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.678960919380188,
      "overall_score": 0.9036882758140563,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6851271986961365,
      "overall_score": 0.9055381596088409,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5313078165054321,
      "overall_score": 0.8593923449516296,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6548029780387878,
      "overall_score": 0.8964408934116364,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5846882462501526,
      "overall_score": 0.8754064738750458,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6953722834587097,
      "overall_score": 0.9086116850376129,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6851271986961365,
      "overall_score": 0.9055381596088409,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5313078165054321,
      "overall_score": 0.8593923449516296,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.0585082545876503,
      "overall_score": 0.717552476376295,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.24047785997390747,
      "overall_score": 0.7721433579921722,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4991767704486847,
      "overall_score": 0.8497530311346053,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.22689968347549438,
      "overall_score": 0.7680699050426483,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.2923737168312073,
      "overall_score": 0.7877121150493621,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.09921366721391678,
      "overall_score": 0.729764100164175,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.24047785997390747,
      "overall_score": 0.7721433579921722,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4946323335170746,
      "overall_score": 0.8483897000551224,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.22689968347549438,
      "overall_score": 0.7680699050426483,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.2923737168312073,
      "overall_score": 0.7877121150493621,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.09921366721391678,
      "overall_score": 0.729764100164175,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.24047785997390747,
      "overall_score": 0.7721433579921722,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48265567421913147,
      "overall_score": 0.8447967022657394,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.22689968347549438,
      "overall_score": 0.7680699050426483,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.2923737168312073,
      "overall_score": 0.7877121150493621,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.4093836545944214,
      "overall_score": 0.7928150963783265,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5276883840560913,
      "overall_score": 0.8583065152168273,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6208926439285278,
      "overall_score": 0.8862677931785583,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.49062633514404297,
      "overall_score": 0.8471879005432128,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4768238365650177,
      "overall_score": 0.8430471509695052,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.42111170291900635,
      "overall_score": 0.7963335108757019,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5276883840560913,
      "overall_score": 0.8583065152168273,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5992650389671326,
      "overall_score": 0.8797795116901397,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.49062633514404297,
      "overall_score": 0.8471879005432128,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4768238365650177,
      "overall_score": 0.8430471509695052,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.42111170291900635,
      "overall_score": 0.7963335108757019,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5276883840560913,
      "overall_score": 0.8583065152168273,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5969291925430298,
      "overall_score": 0.8790787577629089,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.49062633514404297,
      "overall_score": 0.8471879005432128,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4768238365650177,
      "overall_score": 0.8430471509695052,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.4093836545944214,
      "overall_score": 0.7928150963783265,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5276883840560913,
      "overall_score": 0.8583065152168273,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6208926439285278,
      "overall_score": 0.8862677931785583,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44088342785835266,
      "overall_score": 0.8322650283575057,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4768238365650177,
      "overall_score": 0.8430471509695052,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.42111170291900635,
      "overall_score": 0.7963335108757019,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5276883840560913,
      "overall_score": 0.8583065152168273,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5992650389671326,
      "overall_score": 0.8797795116901397,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44088342785835266,
      "overall_score": 0.8322650283575057,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4768238365650177,
      "overall_score": 0.8430471509695052,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.42111170291900635,
      "overall_score": 0.7963335108757019,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5276883840560913,
      "overall_score": 0.8583065152168273,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5537742376327515,
      "overall_score": 0.8661322712898254,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44088342785835266,
      "overall_score": 0.8322650283575057,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4768238365650177,
      "overall_score": 0.8430471509695052,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6751535534858704,
      "overall_score": 0.902546066045761,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5715512037277222,
      "overall_score": 0.8714653611183166,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4960748255252838,
      "overall_score": 0.8488224476575851,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5258307456970215,
      "overall_score": 0.8577492237091064,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.45034268498420715,
      "overall_score": 0.8351028054952621,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7151471376419067,
      "overall_score": 0.914544141292572,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5715512037277222,
      "overall_score": 0.8714653611183166,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48566001653671265,
      "overall_score": 0.8456980049610138,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5258307456970215,
      "overall_score": 0.8577492237091064,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.45034268498420715,
      "overall_score": 0.8351028054952621,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6722109913825989,
      "overall_score": 0.9016632974147796,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5715512037277222,
      "overall_score": 0.8714653611183166,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5117192268371582,
      "overall_score": 0.8535157680511474,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5258307456970215,
      "overall_score": 0.8577492237091064,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.45034268498420715,
      "overall_score": 0.8351028054952621,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.45219898223876953,
      "overall_score": 0.8056596946716309,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.521513819694519,
      "overall_score": 0.8264541459083558,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.75,
      "semantic_score": 0.5049753785133362,
      "overall_score": 0.7764926135540009,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5495501160621643,
      "overall_score": 0.8648650348186493,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44172146916389465,
      "overall_score": 0.8325164407491683,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.4718579947948456,
      "overall_score": 0.8115573984384536,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.521513819694519,
      "overall_score": 0.8264541459083558,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.4958157241344452,
      "overall_score": 0.8187447172403336,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5495501160621643,
      "overall_score": 0.8648650348186493,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44172146916389465,
      "overall_score": 0.8325164407491683,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.47916898131370544,
      "overall_score": 0.8137506943941116,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.521513819694519,
      "overall_score": 0.8264541459083558,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5002943277359009,
      "overall_score": 0.8500882983207703,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5495501160621643,
      "overall_score": 0.8648650348186493,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44172146916389465,
      "overall_score": 0.8325164407491683,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.45219898223876953,
      "overall_score": 0.8056596946716309,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.521513819694519,
      "overall_score": 0.8264541459083558,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.75,
      "semantic_score": 0.5049753785133362,
      "overall_score": 0.7764926135540009,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5495501160621643,
      "overall_score": 0.8648650348186493,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44172146916389465,
      "overall_score": 0.8325164407491683,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.4718579947948456,
      "overall_score": 0.8115573984384536,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.521513819694519,
      "overall_score": 0.8264541459083558,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.4958157241344452,
      "overall_score": 0.8187447172403336,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5495501160621643,
      "overall_score": 0.8648650348186493,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44172146916389465,
      "overall_score": 0.8325164407491683,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.47916898131370544,
      "overall_score": 0.8137506943941116,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.521513819694519,
      "overall_score": 0.8264541459083558,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5002943277359009,
      "overall_score": 0.8500882983207703,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5495501160621643,
      "overall_score": 0.8648650348186493,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44172146916389465,
      "overall_score": 0.8325164407491683,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6751535534858704,
      "overall_score": 0.902546066045761,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5715512037277222,
      "overall_score": 0.8714653611183166,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4960748255252838,
      "overall_score": 0.8488224476575851,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5857903957366943,
      "overall_score": 0.8757371187210082,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5518552660942078,
      "overall_score": 0.8655565798282623,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.7151471376419067,
      "overall_score": 0.914544141292572,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5715512037277222,
      "overall_score": 0.8714653611183166,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48566001653671265,
      "overall_score": 0.8456980049610138,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5857903957366943,
      "overall_score": 0.8757371187210082,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5518552660942078,
      "overall_score": 0.8655565798282623,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6722109913825989,
      "overall_score": 0.9016632974147796,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5715512037277222,
      "overall_score": 0.8714653611183166,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5074266791343689,
      "overall_score": 0.8522280037403106,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5857903957366943,
      "overall_score": 0.8757371187210082,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5518552660942078,
      "overall_score": 0.8655565798282623,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5930386185646057,
      "overall_score": 0.8779115855693816,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5993196368217468,
      "overall_score": 0.879795891046524,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6479928493499756,
      "overall_score": 0.8943978548049927,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6636598110198975,
      "overall_score": 0.8990979433059691,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6357600688934326,
      "overall_score": 0.8907280206680297,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.615522027015686,
      "overall_score": 0.8846566081047058,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5993196368217468,
      "overall_score": 0.879795891046524,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6448403596878052,
      "overall_score": 0.8934521079063416,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6636598110198975,
      "overall_score": 0.8990979433059691,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6357600688934326,
      "overall_score": 0.8907280206680297,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6100916266441345,
      "overall_score": 0.8830274879932403,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5993196368217468,
      "overall_score": 0.879795891046524,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6700342893600464,
      "overall_score": 0.9010102868080139,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6636598110198975,
      "overall_score": 0.8990979433059691,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6357600688934326,
      "overall_score": 0.8907280206680297,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5930386185646057,
      "overall_score": 0.8779115855693816,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5211098790168762,
      "overall_score": 0.8563329637050628,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6479928493499756,
      "overall_score": 0.8943978548049927,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6100395917892456,
      "overall_score": 0.8830118775367737,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.47526007890701294,
      "overall_score": 0.8425780236721039,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.615522027015686,
      "overall_score": 0.8846566081047058,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5211098790168762,
      "overall_score": 0.8563329637050628,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5366955399513245,
      "overall_score": 0.8610086619853973,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6100395917892456,
      "overall_score": 0.8830118775367737,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.47526007890701294,
      "overall_score": 0.8425780236721039,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6100916266441345,
      "overall_score": 0.8830274879932403,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5211098790168762,
      "overall_score": 0.8563329637050628,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5559082627296448,
      "overall_score": 0.8667724788188934,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.6100395917892456,
      "overall_score": 0.8830118775367737,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.47526007890701294,
      "overall_score": 0.8425780236721039,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.06851862370967865,
      "overall_score": 0.7205555871129036,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.25417864322662354,
      "overall_score": 0.776253592967987,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.3672894835472107,
      "overall_score": 0.8101868450641632,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.25133854150772095,
      "overall_score": 0.7754015624523163,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.2859469950199127,
      "overall_score": 0.7857840985059737,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.10492640733718872,
      "overall_score": 0.7314779222011566,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.25417864322662354,
      "overall_score": 0.776253592967987,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.3761037290096283,
      "overall_score": 0.8128311187028885,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.25133854150772095,
      "overall_score": 0.7754015624523163,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.2859469950199127,
      "overall_score": 0.7857840985059737,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.10492640733718872,
      "overall_score": 0.7314779222011566,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.25417864322662354,
      "overall_score": 0.776253592967987,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.3844594359397888,
      "overall_score": 0.8153378307819366,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.25133854150772095,
      "overall_score": 0.7754015624523163,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.2859469950199127,
      "overall_score": 0.7857840985059737,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.3088398277759552,
      "overall_score": 0.7626519483327866,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48980188369750977,
      "overall_score": 0.8469405651092529,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4680718779563904,
      "overall_score": 0.8404215633869171,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5093348622322083,
      "overall_score": 0.8528004586696625,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43178442120552063,
      "overall_score": 0.8295353263616562,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.3252594769001007,
      "overall_score": 0.7675778430700303,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48980188369750977,
      "overall_score": 0.8469405651092529,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4614105224609375,
      "overall_score": 0.8384231567382812,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5093348622322083,
      "overall_score": 0.8528004586696625,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43178442120552063,
      "overall_score": 0.8295353263616562,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.3252594769001007,
      "overall_score": 0.7675778430700303,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48980188369750977,
      "overall_score": 0.8469405651092529,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.47252774238586426,
      "overall_score": 0.8417583227157592,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.5093348622322083,
      "overall_score": 0.8528004586696625,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43178442120552063,
      "overall_score": 0.8295353263616562,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.3088398277759552,
      "overall_score": 0.7626519483327866,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48980188369750977,
      "overall_score": 0.8469405651092529,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4680718779563904,
      "overall_score": 0.8404215633869171,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44155460596084595,
      "overall_score": 0.8324663817882537,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43178442120552063,
      "overall_score": 0.8295353263616562,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.3252594769001007,
      "overall_score": 0.7675778430700303,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48980188369750977,
      "overall_score": 0.8469405651092529,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.4614105224609375,
      "overall_score": 0.8384231567382812,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44155460596084595,
      "overall_score": 0.8324663817882537,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43178442120552063,
      "overall_score": 0.8295353263616562,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 0.9,
      "semantic_score": 0.3252594769001007,
      "overall_score": 0.7675778430700303,
      "quality_level": "good"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.48980188369750977,
      "overall_score": 0.8469405651092529,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.41642263531684875,
      "overall_score": 0.8249267905950546,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.44155460596084595,
      "overall_score": 0.8324663817882537,
      "quality_level": "excellent"
    },
    {
      "coherence_score": 1.0,
      "fluency_score": 1.0,
      "semantic_score": 0.43178442120552063,
      "overall_score": 0.8295353263616562,
      "quality_level": "excellent"
    }
  ],
  "conditioning_analysis": {
    "total_decodings": 540,
    "successful_decodings": 540,
    "avg_overall_score": 0.861690596671154,
    "best_conditioning": {
      "style": {
        "option": "descriptive",
        "score": 0.8921840975019667
      },
      "focus": {
        "option": "nsm",
        "score": 0.8939201001822948
      },
      "length": {
        "option": "short",
        "score": 0.8640642469562589
      }
    },
    "style_performance": {
      "descriptive": [
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.8355374467372895,
        0.8619138967990876,
        0.8217607021331788,
        0.8789825022220611,
        0.8680671095848083,
        0.8516724359989166,
        0.8619138967990876,
        0.8648424756526947,
        0.8789825022220611,
        0.8680671095848083,
        0.8429075312614441,
        0.8619138967990876,
        0.896649569272995,
        0.8789825022220611,
        0.8680671095848083,
        0.8355374467372895,
        0.8619138967990876,
        0.8217607021331788,
        0.8789825022220611,
        0.8680671095848083,
        0.8516724359989166,
        0.8619138967990876,
        0.8648424756526947,
        0.8789825022220611,
        0.8680671095848083,
        0.8429075312614441,
        0.8619138967990876,
        0.896649569272995,
        0.8789825022220611,
        0.8680671095848083,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9075497090816498,
        0.9063435912132263,
        0.926276034116745,
        0.9158097863197326,
        0.8975509345531463,
        0.9266003847122192,
        0.9063435912132263,
        0.9261051952838897,
        0.9158097863197326,
        0.8975509345531463,
        0.9115824997425079,
        0.9063435912132263,
        0.9310302138328552,
        0.9158097863197326,
        0.8975509345531463,
        0.9075497090816498,
        0.9063435912132263,
        0.926276034116745,
        0.9064867138862609,
        0.8792187333106994,
        0.9266003847122192,
        0.9063435912132263,
        0.9261051952838897,
        0.9064867138862609,
        0.8792187333106994,
        0.9115824997425079,
        0.9063435912132263,
        0.9097291469573974,
        0.9064867138862609,
        0.8792187333106994,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.8215678763389588,
        0.8852972984313965,
        0.8872772514820099,
        0.8679890751838684,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.884735107421875,
        0.8679890751838684,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.8840281665325165,
        0.8679890751838684,
        0.8614582896232604,
        0.8215678763389588,
        0.8852972984313965,
        0.8872772514820099,
        0.8674126148223876,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.884735107421875,
        0.8674126148223876,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.8840281665325165,
        0.8674126148223876,
        0.8614582896232604
      ],
      "formal": [
        0.934407776594162,
        0.8816160917282104,
        0.8881923496723174,
        0.8786023259162903,
        0.8081959038972855,
        0.9272094249725341,
        0.8816160917282104,
        0.8896432638168335,
        0.8786023259162903,
        0.8081959038972855,
        0.9178420782089233,
        0.8816160917282104,
        0.8455289453268051,
        0.8786023259162903,
        0.8081959038972855,
        0.8132905793190003,
        0.8368935000896454,
        0.8048496603965759,
        0.868284261226654,
        0.8408077925443649,
        0.8211529922485352,
        0.8368935000896454,
        0.847809751033783,
        0.868284261226654,
        0.8408077925443649,
        0.8222219061851501,
        0.8368935000896454,
        0.8788309395313263,
        0.868284261226654,
        0.8408077925443649,
        0.8132905793190003,
        0.8368935000896454,
        0.8048496603965759,
        0.868284261226654,
        0.8408077925443649,
        0.8211529922485352,
        0.8368935000896454,
        0.847809751033783,
        0.868284261226654,
        0.8408077925443649,
        0.8222219061851501,
        0.8368935000896454,
        0.8788309395313263,
        0.868284261226654,
        0.8408077925443649,
        0.934407776594162,
        0.8804187715053557,
        0.8881923496723174,
        0.8857459783554077,
        0.8379119992256164,
        0.9166023254394531,
        0.8804187715053557,
        0.8896432638168335,
        0.8857459783554077,
        0.8379119992256164,
        0.9178420782089233,
        0.8804187715053557,
        0.895746612548828,
        0.8857459783554077,
        0.8379119992256164,
        0.8953089654445647,
        0.8879731059074402,
        0.909829032421112,
        0.9079922020435333,
        0.8726440489292144,
        0.8964352786540984,
        0.8879731059074402,
        0.9091591238975525,
        0.9079922020435333,
        0.8726440489292144,
        0.8982229888439178,
        0.8879731059074402,
        0.9136208355426788,
        0.9079922020435333,
        0.8726440489292144,
        0.8953089654445647,
        0.8879731059074402,
        0.909829032421112,
        0.892454433441162,
        0.8601126611232757,
        0.8964352786540984,
        0.8879731059074402,
        0.9091591238975525,
        0.892454433441162,
        0.8601126611232757,
        0.8982229888439178,
        0.8879731059074402,
        0.8909603357315063,
        0.892454433441162,
        0.8601126611232757,
        0.7139018859714269,
        0.7943688303232193,
        0.8403244495391845,
        0.7556999281048774,
        0.7655756831169128,
        0.7280214555561542,
        0.7943688303232193,
        0.8377438157796859,
        0.7556999281048774,
        0.7655756831169128,
        0.7280214555561542,
        0.7943688303232193,
        0.8352826654911041,
        0.7556999281048774,
        0.7655756831169128,
        0.7835803312063218,
        0.8567671239376068,
        0.8712339580059051,
        0.8300266444683074,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8695712745189667,
        0.8300266444683074,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8658188998699188,
        0.8300266444683074,
        0.8332860827445984,
        0.7835803312063218,
        0.8567671239376068,
        0.8712339580059051,
        0.815661832690239,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8695712745189667,
        0.815661832690239,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8658188998699188,
        0.815661832690239,
        0.8332860827445984
      ],
      "casual": [
        0.9141106069087982,
        0.8839794754981994,
        0.8990062117576598,
        0.8868806064128876,
        0.8390996992588042,
        0.9272518038749694,
        0.8839794754981994,
        0.8990069985389709,
        0.8868806064128876,
        0.8390996992588042,
        0.9046439290046692,
        0.8839794754981994,
        0.9148442268371582,
        0.8868806064128876,
        0.8390996992588042,
        0.826522649526596,
        0.8369839084148407,
        0.8164418816566468,
        0.8753815293312073,
        0.8519510924816132,
        0.8349954974651337,
        0.8369839084148407,
        0.8598991823196411,
        0.8753815293312073,
        0.8519510924816132,
        0.8362128806114197,
        0.8369839084148407,
        0.8904786646366118,
        0.8753815293312073,
        0.8519510924816132,
        0.826522649526596,
        0.8369839084148407,
        0.8164418816566468,
        0.8753815293312073,
        0.8519510924816132,
        0.8349954974651337,
        0.8369839084148407,
        0.8598991823196411,
        0.8753815293312073,
        0.8519510924816132,
        0.8362128806114197,
        0.8369839084148407,
        0.8904786646366118,
        0.8753815293312073,
        0.8519510924816132,
        0.9141106069087982,
        0.8839794754981994,
        0.8990062117576598,
        0.9130260288715362,
        0.8825732290744781,
        0.9272518038749694,
        0.8839794754981994,
        0.8990069985389709,
        0.9130260288715362,
        0.8825732290744781,
        0.9046439290046692,
        0.8839794754981994,
        0.9070139110088348,
        0.9130260288715362,
        0.8825732290744781,
        0.8901871263980865,
        0.88550865650177,
        0.9319078683853149,
        0.9132472574710846,
        0.8862433850765228,
        0.8995294392108917,
        0.88550865650177,
        0.9308459103107452,
        0.9132472574710846,
        0.8862433850765228,
        0.8964408934116364,
        0.88550865650177,
        0.9368704736232757,
        0.9132472574710846,
        0.8862433850765228,
        0.8901871263980865,
        0.8754064738750458,
        0.9319078683853149,
        0.9055381596088409,
        0.8593923449516296,
        0.8995294392108917,
        0.8754064738750458,
        0.9036882758140563,
        0.9055381596088409,
        0.8593923449516296,
        0.8964408934116364,
        0.8754064738750458,
        0.9086116850376129,
        0.9055381596088409,
        0.8593923449516296,
        0.717552476376295,
        0.7721433579921722,
        0.8497530311346053,
        0.7680699050426483,
        0.7877121150493621,
        0.729764100164175,
        0.7721433579921722,
        0.8483897000551224,
        0.7680699050426483,
        0.7877121150493621,
        0.729764100164175,
        0.7721433579921722,
        0.8447967022657394,
        0.7680699050426483,
        0.7877121150493621,
        0.7928150963783265,
        0.8583065152168273,
        0.8862677931785583,
        0.8471879005432128,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8797795116901397,
        0.8471879005432128,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8790787577629089,
        0.8471879005432128,
        0.8430471509695052,
        0.7928150963783265,
        0.8583065152168273,
        0.8862677931785583,
        0.8322650283575057,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8797795116901397,
        0.8322650283575057,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8661322712898254,
        0.8322650283575057,
        0.8430471509695052
      ],
      "technical": [
        0.902546066045761,
        0.8714653611183166,
        0.8488224476575851,
        0.8577492237091064,
        0.8351028054952621,
        0.914544141292572,
        0.8714653611183166,
        0.8456980049610138,
        0.8577492237091064,
        0.8351028054952621,
        0.9016632974147796,
        0.8714653611183166,
        0.8535157680511474,
        0.8577492237091064,
        0.8351028054952621,
        0.8056596946716309,
        0.8264541459083558,
        0.7764926135540009,
        0.8648650348186493,
        0.8325164407491683,
        0.8115573984384536,
        0.8264541459083558,
        0.8187447172403336,
        0.8648650348186493,
        0.8325164407491683,
        0.8137506943941116,
        0.8264541459083558,
        0.8500882983207703,
        0.8648650348186493,
        0.8325164407491683,
        0.8056596946716309,
        0.8264541459083558,
        0.7764926135540009,
        0.8648650348186493,
        0.8325164407491683,
        0.8115573984384536,
        0.8264541459083558,
        0.8187447172403336,
        0.8648650348186493,
        0.8325164407491683,
        0.8137506943941116,
        0.8264541459083558,
        0.8500882983207703,
        0.8648650348186493,
        0.8325164407491683,
        0.902546066045761,
        0.8714653611183166,
        0.8488224476575851,
        0.8757371187210082,
        0.8655565798282623,
        0.914544141292572,
        0.8714653611183166,
        0.8456980049610138,
        0.8757371187210082,
        0.8655565798282623,
        0.9016632974147796,
        0.8714653611183166,
        0.8522280037403106,
        0.8757371187210082,
        0.8655565798282623,
        0.8779115855693816,
        0.879795891046524,
        0.8943978548049927,
        0.8990979433059691,
        0.8907280206680297,
        0.8846566081047058,
        0.879795891046524,
        0.8934521079063416,
        0.8990979433059691,
        0.8907280206680297,
        0.8830274879932403,
        0.879795891046524,
        0.9010102868080139,
        0.8990979433059691,
        0.8907280206680297,
        0.8779115855693816,
        0.8563329637050628,
        0.8943978548049927,
        0.8830118775367737,
        0.8425780236721039,
        0.8846566081047058,
        0.8563329637050628,
        0.8610086619853973,
        0.8830118775367737,
        0.8425780236721039,
        0.8830274879932403,
        0.8563329637050628,
        0.8667724788188934,
        0.8830118775367737,
        0.8425780236721039,
        0.7205555871129036,
        0.776253592967987,
        0.8101868450641632,
        0.7754015624523163,
        0.7857840985059737,
        0.7314779222011566,
        0.776253592967987,
        0.8128311187028885,
        0.7754015624523163,
        0.7857840985059737,
        0.7314779222011566,
        0.776253592967987,
        0.8153378307819366,
        0.7754015624523163,
        0.7857840985059737,
        0.7626519483327866,
        0.8469405651092529,
        0.8404215633869171,
        0.8528004586696625,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8384231567382812,
        0.8528004586696625,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8417583227157592,
        0.8528004586696625,
        0.8295353263616562,
        0.7626519483327866,
        0.8469405651092529,
        0.8404215633869171,
        0.8324663817882537,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8384231567382812,
        0.8324663817882537,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8249267905950546,
        0.8324663817882537,
        0.8295353263616562
      ]
    },
    "focus_performance": {
      "balanced": [
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.8355374467372895,
        0.8619138967990876,
        0.8217607021331788,
        0.8789825022220611,
        0.8680671095848083,
        0.8516724359989166,
        0.8619138967990876,
        0.8648424756526947,
        0.8789825022220611,
        0.8680671095848083,
        0.8429075312614441,
        0.8619138967990876,
        0.896649569272995,
        0.8789825022220611,
        0.8680671095848083,
        0.8355374467372895,
        0.8619138967990876,
        0.8217607021331788,
        0.8789825022220611,
        0.8680671095848083,
        0.8516724359989166,
        0.8619138967990876,
        0.8648424756526947,
        0.8789825022220611,
        0.8680671095848083,
        0.8429075312614441,
        0.8619138967990876,
        0.896649569272995,
        0.8789825022220611,
        0.8680671095848083,
        0.934407776594162,
        0.8816160917282104,
        0.8881923496723174,
        0.8786023259162903,
        0.8081959038972855,
        0.9272094249725341,
        0.8816160917282104,
        0.8896432638168335,
        0.8786023259162903,
        0.8081959038972855,
        0.9178420782089233,
        0.8816160917282104,
        0.8455289453268051,
        0.8786023259162903,
        0.8081959038972855,
        0.8132905793190003,
        0.8368935000896454,
        0.8048496603965759,
        0.868284261226654,
        0.8408077925443649,
        0.8211529922485352,
        0.8368935000896454,
        0.847809751033783,
        0.868284261226654,
        0.8408077925443649,
        0.8222219061851501,
        0.8368935000896454,
        0.8788309395313263,
        0.868284261226654,
        0.8408077925443649,
        0.8132905793190003,
        0.8368935000896454,
        0.8048496603965759,
        0.868284261226654,
        0.8408077925443649,
        0.8211529922485352,
        0.8368935000896454,
        0.847809751033783,
        0.868284261226654,
        0.8408077925443649,
        0.8222219061851501,
        0.8368935000896454,
        0.8788309395313263,
        0.868284261226654,
        0.8408077925443649,
        0.9141106069087982,
        0.8839794754981994,
        0.8990062117576598,
        0.8868806064128876,
        0.8390996992588042,
        0.9272518038749694,
        0.8839794754981994,
        0.8990069985389709,
        0.8868806064128876,
        0.8390996992588042,
        0.9046439290046692,
        0.8839794754981994,
        0.9148442268371582,
        0.8868806064128876,
        0.8390996992588042,
        0.826522649526596,
        0.8369839084148407,
        0.8164418816566468,
        0.8753815293312073,
        0.8519510924816132,
        0.8349954974651337,
        0.8369839084148407,
        0.8598991823196411,
        0.8753815293312073,
        0.8519510924816132,
        0.8362128806114197,
        0.8369839084148407,
        0.8904786646366118,
        0.8753815293312073,
        0.8519510924816132,
        0.826522649526596,
        0.8369839084148407,
        0.8164418816566468,
        0.8753815293312073,
        0.8519510924816132,
        0.8349954974651337,
        0.8369839084148407,
        0.8598991823196411,
        0.8753815293312073,
        0.8519510924816132,
        0.8362128806114197,
        0.8369839084148407,
        0.8904786646366118,
        0.8753815293312073,
        0.8519510924816132,
        0.902546066045761,
        0.8714653611183166,
        0.8488224476575851,
        0.8577492237091064,
        0.8351028054952621,
        0.914544141292572,
        0.8714653611183166,
        0.8456980049610138,
        0.8577492237091064,
        0.8351028054952621,
        0.9016632974147796,
        0.8714653611183166,
        0.8535157680511474,
        0.8577492237091064,
        0.8351028054952621,
        0.8056596946716309,
        0.8264541459083558,
        0.7764926135540009,
        0.8648650348186493,
        0.8325164407491683,
        0.8115573984384536,
        0.8264541459083558,
        0.8187447172403336,
        0.8648650348186493,
        0.8325164407491683,
        0.8137506943941116,
        0.8264541459083558,
        0.8500882983207703,
        0.8648650348186493,
        0.8325164407491683,
        0.8056596946716309,
        0.8264541459083558,
        0.7764926135540009,
        0.8648650348186493,
        0.8325164407491683,
        0.8115573984384536,
        0.8264541459083558,
        0.8187447172403336,
        0.8648650348186493,
        0.8325164407491683,
        0.8137506943941116,
        0.8264541459083558,
        0.8500882983207703,
        0.8648650348186493,
        0.8325164407491683
      ],
      "nsm": [
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9075497090816498,
        0.9063435912132263,
        0.926276034116745,
        0.9158097863197326,
        0.8975509345531463,
        0.9266003847122192,
        0.9063435912132263,
        0.9261051952838897,
        0.9158097863197326,
        0.8975509345531463,
        0.9115824997425079,
        0.9063435912132263,
        0.9310302138328552,
        0.9158097863197326,
        0.8975509345531463,
        0.9075497090816498,
        0.9063435912132263,
        0.926276034116745,
        0.9064867138862609,
        0.8792187333106994,
        0.9266003847122192,
        0.9063435912132263,
        0.9261051952838897,
        0.9064867138862609,
        0.8792187333106994,
        0.9115824997425079,
        0.9063435912132263,
        0.9097291469573974,
        0.9064867138862609,
        0.8792187333106994,
        0.934407776594162,
        0.8804187715053557,
        0.8881923496723174,
        0.8857459783554077,
        0.8379119992256164,
        0.9166023254394531,
        0.8804187715053557,
        0.8896432638168335,
        0.8857459783554077,
        0.8379119992256164,
        0.9178420782089233,
        0.8804187715053557,
        0.895746612548828,
        0.8857459783554077,
        0.8379119992256164,
        0.8953089654445647,
        0.8879731059074402,
        0.909829032421112,
        0.9079922020435333,
        0.8726440489292144,
        0.8964352786540984,
        0.8879731059074402,
        0.9091591238975525,
        0.9079922020435333,
        0.8726440489292144,
        0.8982229888439178,
        0.8879731059074402,
        0.9136208355426788,
        0.9079922020435333,
        0.8726440489292144,
        0.8953089654445647,
        0.8879731059074402,
        0.909829032421112,
        0.892454433441162,
        0.8601126611232757,
        0.8964352786540984,
        0.8879731059074402,
        0.9091591238975525,
        0.892454433441162,
        0.8601126611232757,
        0.8982229888439178,
        0.8879731059074402,
        0.8909603357315063,
        0.892454433441162,
        0.8601126611232757,
        0.9141106069087982,
        0.8839794754981994,
        0.8990062117576598,
        0.9130260288715362,
        0.8825732290744781,
        0.9272518038749694,
        0.8839794754981994,
        0.8990069985389709,
        0.9130260288715362,
        0.8825732290744781,
        0.9046439290046692,
        0.8839794754981994,
        0.9070139110088348,
        0.9130260288715362,
        0.8825732290744781,
        0.8901871263980865,
        0.88550865650177,
        0.9319078683853149,
        0.9132472574710846,
        0.8862433850765228,
        0.8995294392108917,
        0.88550865650177,
        0.9308459103107452,
        0.9132472574710846,
        0.8862433850765228,
        0.8964408934116364,
        0.88550865650177,
        0.9368704736232757,
        0.9132472574710846,
        0.8862433850765228,
        0.8901871263980865,
        0.8754064738750458,
        0.9319078683853149,
        0.9055381596088409,
        0.8593923449516296,
        0.8995294392108917,
        0.8754064738750458,
        0.9036882758140563,
        0.9055381596088409,
        0.8593923449516296,
        0.8964408934116364,
        0.8754064738750458,
        0.9086116850376129,
        0.9055381596088409,
        0.8593923449516296,
        0.902546066045761,
        0.8714653611183166,
        0.8488224476575851,
        0.8757371187210082,
        0.8655565798282623,
        0.914544141292572,
        0.8714653611183166,
        0.8456980049610138,
        0.8757371187210082,
        0.8655565798282623,
        0.9016632974147796,
        0.8714653611183166,
        0.8522280037403106,
        0.8757371187210082,
        0.8655565798282623,
        0.8779115855693816,
        0.879795891046524,
        0.8943978548049927,
        0.8990979433059691,
        0.8907280206680297,
        0.8846566081047058,
        0.879795891046524,
        0.8934521079063416,
        0.8990979433059691,
        0.8907280206680297,
        0.8830274879932403,
        0.879795891046524,
        0.9010102868080139,
        0.8990979433059691,
        0.8907280206680297,
        0.8779115855693816,
        0.8563329637050628,
        0.8943978548049927,
        0.8830118775367737,
        0.8425780236721039,
        0.8846566081047058,
        0.8563329637050628,
        0.8610086619853973,
        0.8830118775367737,
        0.8425780236721039,
        0.8830274879932403,
        0.8563329637050628,
        0.8667724788188934,
        0.8830118775367737,
        0.8425780236721039
      ],
      "graph": [
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.8215678763389588,
        0.8852972984313965,
        0.8872772514820099,
        0.8679890751838684,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.884735107421875,
        0.8679890751838684,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.8840281665325165,
        0.8679890751838684,
        0.8614582896232604,
        0.8215678763389588,
        0.8852972984313965,
        0.8872772514820099,
        0.8674126148223876,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.884735107421875,
        0.8674126148223876,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.8840281665325165,
        0.8674126148223876,
        0.8614582896232604,
        0.7139018859714269,
        0.7943688303232193,
        0.8403244495391845,
        0.7556999281048774,
        0.7655756831169128,
        0.7280214555561542,
        0.7943688303232193,
        0.8377438157796859,
        0.7556999281048774,
        0.7655756831169128,
        0.7280214555561542,
        0.7943688303232193,
        0.8352826654911041,
        0.7556999281048774,
        0.7655756831169128,
        0.7835803312063218,
        0.8567671239376068,
        0.8712339580059051,
        0.8300266444683074,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8695712745189667,
        0.8300266444683074,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8658188998699188,
        0.8300266444683074,
        0.8332860827445984,
        0.7835803312063218,
        0.8567671239376068,
        0.8712339580059051,
        0.815661832690239,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8695712745189667,
        0.815661832690239,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8658188998699188,
        0.815661832690239,
        0.8332860827445984,
        0.717552476376295,
        0.7721433579921722,
        0.8497530311346053,
        0.7680699050426483,
        0.7877121150493621,
        0.729764100164175,
        0.7721433579921722,
        0.8483897000551224,
        0.7680699050426483,
        0.7877121150493621,
        0.729764100164175,
        0.7721433579921722,
        0.8447967022657394,
        0.7680699050426483,
        0.7877121150493621,
        0.7928150963783265,
        0.8583065152168273,
        0.8862677931785583,
        0.8471879005432128,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8797795116901397,
        0.8471879005432128,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8790787577629089,
        0.8471879005432128,
        0.8430471509695052,
        0.7928150963783265,
        0.8583065152168273,
        0.8862677931785583,
        0.8322650283575057,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8797795116901397,
        0.8322650283575057,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8661322712898254,
        0.8322650283575057,
        0.8430471509695052,
        0.7205555871129036,
        0.776253592967987,
        0.8101868450641632,
        0.7754015624523163,
        0.7857840985059737,
        0.7314779222011566,
        0.776253592967987,
        0.8128311187028885,
        0.7754015624523163,
        0.7857840985059737,
        0.7314779222011566,
        0.776253592967987,
        0.8153378307819366,
        0.7754015624523163,
        0.7857840985059737,
        0.7626519483327866,
        0.8469405651092529,
        0.8404215633869171,
        0.8528004586696625,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8384231567382812,
        0.8528004586696625,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8417583227157592,
        0.8528004586696625,
        0.8295353263616562,
        0.7626519483327866,
        0.8469405651092529,
        0.8404215633869171,
        0.8324663817882537,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8384231567382812,
        0.8324663817882537,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8249267905950546,
        0.8324663817882537,
        0.8295353263616562
      ]
    },
    "length_performance": {
      "short": [
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.9375158846378326,
        0.8691411554813384,
        0.9225565612316131,
        0.9536813616752624,
        0.9125038027763366,
        0.934407776594162,
        0.8816160917282104,
        0.8881923496723174,
        0.8786023259162903,
        0.8081959038972855,
        0.9272094249725341,
        0.8816160917282104,
        0.8896432638168335,
        0.8786023259162903,
        0.8081959038972855,
        0.9178420782089233,
        0.8816160917282104,
        0.8455289453268051,
        0.8786023259162903,
        0.8081959038972855,
        0.934407776594162,
        0.8804187715053557,
        0.8881923496723174,
        0.8857459783554077,
        0.8379119992256164,
        0.9166023254394531,
        0.8804187715053557,
        0.8896432638168335,
        0.8857459783554077,
        0.8379119992256164,
        0.9178420782089233,
        0.8804187715053557,
        0.895746612548828,
        0.8857459783554077,
        0.8379119992256164,
        0.7139018859714269,
        0.7943688303232193,
        0.8403244495391845,
        0.7556999281048774,
        0.7655756831169128,
        0.7280214555561542,
        0.7943688303232193,
        0.8377438157796859,
        0.7556999281048774,
        0.7655756831169128,
        0.7280214555561542,
        0.7943688303232193,
        0.8352826654911041,
        0.7556999281048774,
        0.7655756831169128,
        0.9141106069087982,
        0.8839794754981994,
        0.8990062117576598,
        0.8868806064128876,
        0.8390996992588042,
        0.9272518038749694,
        0.8839794754981994,
        0.8990069985389709,
        0.8868806064128876,
        0.8390996992588042,
        0.9046439290046692,
        0.8839794754981994,
        0.9148442268371582,
        0.8868806064128876,
        0.8390996992588042,
        0.9141106069087982,
        0.8839794754981994,
        0.8990062117576598,
        0.9130260288715362,
        0.8825732290744781,
        0.9272518038749694,
        0.8839794754981994,
        0.8990069985389709,
        0.9130260288715362,
        0.8825732290744781,
        0.9046439290046692,
        0.8839794754981994,
        0.9070139110088348,
        0.9130260288715362,
        0.8825732290744781,
        0.717552476376295,
        0.7721433579921722,
        0.8497530311346053,
        0.7680699050426483,
        0.7877121150493621,
        0.729764100164175,
        0.7721433579921722,
        0.8483897000551224,
        0.7680699050426483,
        0.7877121150493621,
        0.729764100164175,
        0.7721433579921722,
        0.8447967022657394,
        0.7680699050426483,
        0.7877121150493621,
        0.902546066045761,
        0.8714653611183166,
        0.8488224476575851,
        0.8577492237091064,
        0.8351028054952621,
        0.914544141292572,
        0.8714653611183166,
        0.8456980049610138,
        0.8577492237091064,
        0.8351028054952621,
        0.9016632974147796,
        0.8714653611183166,
        0.8535157680511474,
        0.8577492237091064,
        0.8351028054952621,
        0.902546066045761,
        0.8714653611183166,
        0.8488224476575851,
        0.8757371187210082,
        0.8655565798282623,
        0.914544141292572,
        0.8714653611183166,
        0.8456980049610138,
        0.8757371187210082,
        0.8655565798282623,
        0.9016632974147796,
        0.8714653611183166,
        0.8522280037403106,
        0.8757371187210082,
        0.8655565798282623,
        0.7205555871129036,
        0.776253592967987,
        0.8101868450641632,
        0.7754015624523163,
        0.7857840985059737,
        0.7314779222011566,
        0.776253592967987,
        0.8128311187028885,
        0.7754015624523163,
        0.7857840985059737,
        0.7314779222011566,
        0.776253592967987,
        0.8153378307819366,
        0.7754015624523163,
        0.7857840985059737
      ],
      "medium": [
        0.8355374467372895,
        0.8619138967990876,
        0.8217607021331788,
        0.8789825022220611,
        0.8680671095848083,
        0.8516724359989166,
        0.8619138967990876,
        0.8648424756526947,
        0.8789825022220611,
        0.8680671095848083,
        0.8429075312614441,
        0.8619138967990876,
        0.896649569272995,
        0.8789825022220611,
        0.8680671095848083,
        0.9075497090816498,
        0.9063435912132263,
        0.926276034116745,
        0.9158097863197326,
        0.8975509345531463,
        0.9266003847122192,
        0.9063435912132263,
        0.9261051952838897,
        0.9158097863197326,
        0.8975509345531463,
        0.9115824997425079,
        0.9063435912132263,
        0.9310302138328552,
        0.9158097863197326,
        0.8975509345531463,
        0.8215678763389588,
        0.8852972984313965,
        0.8872772514820099,
        0.8679890751838684,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.884735107421875,
        0.8679890751838684,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.8840281665325165,
        0.8679890751838684,
        0.8614582896232604,
        0.8132905793190003,
        0.8368935000896454,
        0.8048496603965759,
        0.868284261226654,
        0.8408077925443649,
        0.8211529922485352,
        0.8368935000896454,
        0.847809751033783,
        0.868284261226654,
        0.8408077925443649,
        0.8222219061851501,
        0.8368935000896454,
        0.8788309395313263,
        0.868284261226654,
        0.8408077925443649,
        0.8953089654445647,
        0.8879731059074402,
        0.909829032421112,
        0.9079922020435333,
        0.8726440489292144,
        0.8964352786540984,
        0.8879731059074402,
        0.9091591238975525,
        0.9079922020435333,
        0.8726440489292144,
        0.8982229888439178,
        0.8879731059074402,
        0.9136208355426788,
        0.9079922020435333,
        0.8726440489292144,
        0.7835803312063218,
        0.8567671239376068,
        0.8712339580059051,
        0.8300266444683074,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8695712745189667,
        0.8300266444683074,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8658188998699188,
        0.8300266444683074,
        0.8332860827445984,
        0.826522649526596,
        0.8369839084148407,
        0.8164418816566468,
        0.8753815293312073,
        0.8519510924816132,
        0.8349954974651337,
        0.8369839084148407,
        0.8598991823196411,
        0.8753815293312073,
        0.8519510924816132,
        0.8362128806114197,
        0.8369839084148407,
        0.8904786646366118,
        0.8753815293312073,
        0.8519510924816132,
        0.8901871263980865,
        0.88550865650177,
        0.9319078683853149,
        0.9132472574710846,
        0.8862433850765228,
        0.8995294392108917,
        0.88550865650177,
        0.9308459103107452,
        0.9132472574710846,
        0.8862433850765228,
        0.8964408934116364,
        0.88550865650177,
        0.9368704736232757,
        0.9132472574710846,
        0.8862433850765228,
        0.7928150963783265,
        0.8583065152168273,
        0.8862677931785583,
        0.8471879005432128,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8797795116901397,
        0.8471879005432128,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8790787577629089,
        0.8471879005432128,
        0.8430471509695052,
        0.8056596946716309,
        0.8264541459083558,
        0.7764926135540009,
        0.8648650348186493,
        0.8325164407491683,
        0.8115573984384536,
        0.8264541459083558,
        0.8187447172403336,
        0.8648650348186493,
        0.8325164407491683,
        0.8137506943941116,
        0.8264541459083558,
        0.8500882983207703,
        0.8648650348186493,
        0.8325164407491683,
        0.8779115855693816,
        0.879795891046524,
        0.8943978548049927,
        0.8990979433059691,
        0.8907280206680297,
        0.8846566081047058,
        0.879795891046524,
        0.8934521079063416,
        0.8990979433059691,
        0.8907280206680297,
        0.8830274879932403,
        0.879795891046524,
        0.9010102868080139,
        0.8990979433059691,
        0.8907280206680297,
        0.7626519483327866,
        0.8469405651092529,
        0.8404215633869171,
        0.8528004586696625,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8384231567382812,
        0.8528004586696625,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8417583227157592,
        0.8528004586696625,
        0.8295353263616562
      ],
      "long": [
        0.8355374467372895,
        0.8619138967990876,
        0.8217607021331788,
        0.8789825022220611,
        0.8680671095848083,
        0.8516724359989166,
        0.8619138967990876,
        0.8648424756526947,
        0.8789825022220611,
        0.8680671095848083,
        0.8429075312614441,
        0.8619138967990876,
        0.896649569272995,
        0.8789825022220611,
        0.8680671095848083,
        0.9075497090816498,
        0.9063435912132263,
        0.926276034116745,
        0.9064867138862609,
        0.8792187333106994,
        0.9266003847122192,
        0.9063435912132263,
        0.9261051952838897,
        0.9064867138862609,
        0.8792187333106994,
        0.9115824997425079,
        0.9063435912132263,
        0.9097291469573974,
        0.9064867138862609,
        0.8792187333106994,
        0.8215678763389588,
        0.8852972984313965,
        0.8872772514820099,
        0.8674126148223876,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.884735107421875,
        0.8674126148223876,
        0.8614582896232604,
        0.8228851091861725,
        0.8852972984313965,
        0.8840281665325165,
        0.8674126148223876,
        0.8614582896232604,
        0.8132905793190003,
        0.8368935000896454,
        0.8048496603965759,
        0.868284261226654,
        0.8408077925443649,
        0.8211529922485352,
        0.8368935000896454,
        0.847809751033783,
        0.868284261226654,
        0.8408077925443649,
        0.8222219061851501,
        0.8368935000896454,
        0.8788309395313263,
        0.868284261226654,
        0.8408077925443649,
        0.8953089654445647,
        0.8879731059074402,
        0.909829032421112,
        0.892454433441162,
        0.8601126611232757,
        0.8964352786540984,
        0.8879731059074402,
        0.9091591238975525,
        0.892454433441162,
        0.8601126611232757,
        0.8982229888439178,
        0.8879731059074402,
        0.8909603357315063,
        0.892454433441162,
        0.8601126611232757,
        0.7835803312063218,
        0.8567671239376068,
        0.8712339580059051,
        0.815661832690239,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8695712745189667,
        0.815661832690239,
        0.8332860827445984,
        0.7865290176868439,
        0.8567671239376068,
        0.8658188998699188,
        0.815661832690239,
        0.8332860827445984,
        0.826522649526596,
        0.8369839084148407,
        0.8164418816566468,
        0.8753815293312073,
        0.8519510924816132,
        0.8349954974651337,
        0.8369839084148407,
        0.8598991823196411,
        0.8753815293312073,
        0.8519510924816132,
        0.8362128806114197,
        0.8369839084148407,
        0.8904786646366118,
        0.8753815293312073,
        0.8519510924816132,
        0.8901871263980865,
        0.8754064738750458,
        0.9319078683853149,
        0.9055381596088409,
        0.8593923449516296,
        0.8995294392108917,
        0.8754064738750458,
        0.9036882758140563,
        0.9055381596088409,
        0.8593923449516296,
        0.8964408934116364,
        0.8754064738750458,
        0.9086116850376129,
        0.9055381596088409,
        0.8593923449516296,
        0.7928150963783265,
        0.8583065152168273,
        0.8862677931785583,
        0.8322650283575057,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8797795116901397,
        0.8322650283575057,
        0.8430471509695052,
        0.7963335108757019,
        0.8583065152168273,
        0.8661322712898254,
        0.8322650283575057,
        0.8430471509695052,
        0.8056596946716309,
        0.8264541459083558,
        0.7764926135540009,
        0.8648650348186493,
        0.8325164407491683,
        0.8115573984384536,
        0.8264541459083558,
        0.8187447172403336,
        0.8648650348186493,
        0.8325164407491683,
        0.8137506943941116,
        0.8264541459083558,
        0.8500882983207703,
        0.8648650348186493,
        0.8325164407491683,
        0.8779115855693816,
        0.8563329637050628,
        0.8943978548049927,
        0.8830118775367737,
        0.8425780236721039,
        0.8846566081047058,
        0.8563329637050628,
        0.8610086619853973,
        0.8830118775367737,
        0.8425780236721039,
        0.8830274879932403,
        0.8563329637050628,
        0.8667724788188934,
        0.8830118775367737,
        0.8425780236721039,
        0.7626519483327866,
        0.8469405651092529,
        0.8404215633869171,
        0.8324663817882537,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8384231567382812,
        0.8324663817882537,
        0.8295353263616562,
        0.7675778430700303,
        0.8469405651092529,
        0.8249267905950546,
        0.8324663817882537,
        0.8295353263616562
      ]
    },
    "quality_distribution": {
      "excellent": 484,
      "good": 56
    }
  },
  "recommendations": [
    "Best style: descriptive - consider prioritizing this style",
    "Best focus: nsm - consider prioritizing this focus",
    "Best length: short - consider prioritizing this length"
  ]
}